workflow:
  rules:
    # if the branch is not main and the pipeline trigger is not merge request never excute it, otherwise always excute.
    - if: $CI_COMMIT_BRANCH != "main" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never 
    - when: always


stages:
  - build
  - update-manifests

cache:
  paths:
    - .m2/repository
  key: "$CI_JOB_NAME"



variables:
  SERVICE_DISCOVERY_IMG: "service-discovery-"
  API_SERVICE_IMG: "api-service-"
  EMAIL_SERVICE_IMG: "email-service-"
  AUTH_SERVICE: "auth-service-"
  INVENTORY_SERVICE: "inventory-service-"
  ORDER_SERVICE: "order-service-"
  USER_SERVICE: "user-service-"


stage_build:
  image: docker:24.0.7
  stage: build
  before_script:
    - docker login -u $DOCKER_USER_NAME -p $DOCKER_PASSWORD
  script:
    - docker build -t $DOCKER_USER_NAME/${API_SERVICE_IMG}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.api .
    - docker push $DOCKER_USER_NAME/${API_SERVICE_IMG}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA
    
    - docker build -t $DOCKER_USER_NAME/${AUTH_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.auth .
    - docker push $DOCKER_USER_NAME/${AUTH_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA
    
    - docker build -t $DOCKER_USER_NAME/${INVENTORY_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.inventory .
    - docker push $DOCKER_USER_NAME/${INVENTORY_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA

    - docker build -t $DOCKER_USER_NAME/${EMAIL_SERVICE_IMG}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.email .
    - docker push $DOCKER_USER_NAME/${EMAIL_SERVICE_IMG}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA
    
    - |
      docker build -t $DOCKER_USER_NAME/${SERVICE_DISCOVERY_IMG}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.discovery .
    - docker push $DOCKER_USER_NAME/${SERVICE_DISCOVERY_IMG}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA

    - docker build -t $DOCKER_USER_NAME/${ORDER_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.order .
    - docker push $DOCKER_USER_NAME/${ORDER_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA

    - docker build -t $DOCKER_USER_NAME/${USER_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA -f Dockerfile.user .
    - docker push $DOCKER_USER_NAME/${USER_SERVICE}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA

.update_manifest:
  stage: update-manifests
  variables:
    MANIFEST_GIT_REPO: https://$USERNAME:$PAT_TOKEN@git.gebeya.training/order-optima/k8s-manifests.git

  before_script:
  - apk add git
  - git clone $MANIFEST_GIT_REPO
  - git config --global user.name "$GITLAB_USER_NAME"
  - git config --global user.email "$GITLAB_USER_EMAIL"
  script:
  - cd k8s-manifests
  - git remote set-url origin --push $MANIFEST_GIT_REPO
  - |
    sed -i "s#image:.*#image: ${DOCKER_IMAGE}#g" ./$MANIFEST_STAGING_PATH
  - git stage ./$MANIFEST_STAGING_PATH
  - git commit -m "$COMMIT_MESSAGE [skip-ci]"
  - git push origin HEAD:$CI_COMMIT_REF_NAME



# update k8s manifest jobs 

update_apigateway_manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "api-gateway/deployment.yaml"
    COMMIT_MESSAGE: "update service managmanet image"
    IMAGE_PATH: "api-service-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA
update_email-service_manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "email-service/deployment.yaml"
    COMMIT_MESSAGE: "update service managmanet image"
    IMAGE_PATH: "email-service-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA


update_service_discovery_manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "service-discovery/deployment.yaml"
    COMMIT_MESSAGE: "update service managmanet image"
    IMAGE_PATH: "service-discovery-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA

update_order_service_manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "order-management/deployment.yaml"
    COMMIT_MESSAGE: "update order  managmanet image"
    IMAGE_PATH: "order-service-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA


update_inventory_service_manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "inventory-management/deployment.yaml"
    COMMIT_MESSAGE: "update order  inventory image"
    IMAGE_PATH: "inventory-service-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA



update_auth_service-manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "auth-service/deployment.yaml"
    COMMIT_MESSAGE: "update auth service image"
    IMAGE_PATH: "auth-service-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA
    
update_user_service-manifest:
  extends: .update_manifest
  stage: update-manifests
  variables:
    MANIFEST_STAGING_PATH: "user-service/deployment.yaml"
    COMMIT_MESSAGE: "update auth service image"
    IMAGE_PATH: "user-service-"
    DOCKER_IMAGE: $DOCKER_USER_NAME/${IMAGE_PATH}${CI_PROJECT_NAME}:$CI_COMMIT_SHORT_SHA
